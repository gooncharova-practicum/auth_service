"""foreign key in role

Revision ID: 25bb8aca5a0b
Revises: aedba0959d27
Create Date: 2023-04-14 11:38:30.658698

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "25bb8aca5a0b"
down_revision = "aedba0959d27"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "roles",
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.Column("description", sa.String(length=200), nullable=True),
        sa.Column("uid", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("uid"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("uid"),
    )
    op.create_table(
        "user_role",
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("role_id", sa.UUID(), nullable=True),
        sa.Column("uid", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["role_id"], ["roles.uid"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.uid"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("uid"),
        sa.UniqueConstraint("uid"),
    )
    op.drop_table("role")
    op.create_unique_constraint(None, "user", ["uid"])
    op.drop_column("user", "birth_date")
    op.add_column("user_history", sa.Column("user_id", sa.UUID(), nullable=True))
    op.create_unique_constraint(None, "user_history", ["uid"])
    op.create_foreign_key(None, "user_history", "user", ["user_id"], ["uid"], ondelete="CASCADE")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "user_history", type_="foreignkey")
    op.drop_constraint(None, "user_history", type_="unique")
    op.drop_column("user_history", "user_id")
    op.add_column(
        "user", sa.Column("birth_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "user", type_="unique")
    op.create_table(
        "role",
        sa.Column("name", sa.VARCHAR(length=32), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(length=200), autoincrement=False, nullable=True),
        sa.Column("uid", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("uid", name="role_pkey"),
        sa.UniqueConstraint("name", name="role_name_key"),
    )
    op.drop_table("user_role")
    op.drop_table("roles")
    # ### end Alembic commands ###
